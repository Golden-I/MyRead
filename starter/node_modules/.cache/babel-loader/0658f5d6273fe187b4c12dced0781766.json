{"ast":null,"code":"var _jsxFileName = \"/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport Books from \"./Components/Books\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/Shelf\";\nimport ShelfChange from \"./Components/Shelfchange\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [mapBooksID, setMapIDBooks] = useState(new Map());\n  useEffect(() => {\n    BooksAPI.getAll().then(data => {\n      setBooks(data);\n      map.BooksID(createBooksMap(data));\n    });\n  }, []);\n  useEffect(() => {\n    const merge = searchBooks.map(Book => {\n      if (mapBooksID.has(book.id)) {\n        return mapBooksID.get(book.id);\n      } else {\n        return Book;\n      }\n    });\n    setMegeBooks(merge);\n  }), [searchBooks];\n\n  const onchange = (book, placeIt) => {\n    const updateBooks = books.map(book => {\n      if (book.id === book.id) {\n        book.shelf = placeIt;\n        return book;\n      }\n\n      return book;\n    });\n\n    if (!mapBooksID.has(book.id)) {\n      book.shelf = placeIT;\n      updateBooks.push(book);\n    }\n\n    setBooks(updateBooks);\n    BooksAPI.update(book, placeIt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-searc\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\",\n            value: query,\n            onChange: Event => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: megeBooks.mpa(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Book, {\n            Book: book,\n            BookShelfChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [console.log(\"Search\", searcBooks), /*#__PURE__*/_jsxDEV(BooksList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: [/*#__PURE__*/_jsxDEV(Shelves, {\n          books: books,\n          updateBookShelf: updateBookShelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"openSearch\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0oS5pNlLUJhhSta4ZiH2JwRa594=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js"],"names":["useState","useEffect","React","Component","Books","BooksList","Shelf","ShelfChange","BooksAPI","App","showSearchPage","setShowSearchpage","books","setBooks","mapBooksID","setMapIDBooks","Map","getAll","then","data","map","BooksID","createBooksMap","merge","searchBooks","Book","has","book","id","get","setMegeBooks","onchange","placeIt","updateBooks","shelf","placeIT","push","update","query","Event","setQuery","e","target","value","megeBooks","mpa","onChange","console","log","searcBooks","updateBookShelf"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport Books from \"./Components/Books\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/Shelf\";\nimport ShelfChange from \"./Components/Shelfchange\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nfunction App() {\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [mapBooksID, setMapIDBooks] = useState(new Map());\n\n  useEffect(() => {\n    BooksAPI.getAll().then((data) => {\n      setBooks(data);\n      map.BooksID(createBooksMap(data));\n    });\n  }, []);\n\n  useEffect(() => {\n    const merge = searchBooks.map((Book) => {\n      if (mapBooksID.has(book.id)) {\n        return mapBooksID.get(book.id);\n      } else {\n        return Book;\n      }\n    });\n    setMegeBooks(merge);\n  }),\n    [searchBooks];\n\n  const onchange = (book, placeIt) => {\n    const updateBooks = books.map((book) => {\n      if (book.id === book.id) {\n        book.shelf = placeIt;\n        return book;\n      }\n      return book;\n    });\n    if (!mapBooksID.has(book.id)) {\n      book.shelf = placeIT;\n      updateBooks.push(book);\n    }\n    setBooks(updateBooks);\n    BooksAPI.update(book, placeIt);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <button className=\"close-searc\">Close</button>\n          <a\n            className=\"close-search\"\n            onClick={() => setShowSearchpage(!showSearchPage)}\n          >\n            Close\n          </a>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title, author, or ISBN\"\n              value={query}\n              onChange={(Event) => setQuery(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          {/* <className=\"books-grid\"> */}\n          {megeBooks.mpa((book) => (\n            <li key={book.id}>\n              <Book Book={book} BookShelfChange={onChange} />\n            </li>\n          ))}\n        </div>\n      </div>\n      <div className=\"list-books\">\n        {console.log(\"Search\", searcBooks)}\n        <BooksList />\n\n        <div className=\"list-books-content\">\n          <Shelves books={books} updateBookShelf={updateBookShelf} />\n          <div>\n            <div className=\"openSearch\">\n              <button>Add Book</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}