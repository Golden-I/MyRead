{"ast":null,"code":"var _jsxFileName = \"/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/Components/BooksSearch.jsx\";\nimport { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BooksSearch = ({\n  shelf,\n  book,\n  onChange,\n  fetchedBooks\n}) => {\n  const bookShelf = book.filter(book => book.shelf === shelf.key);\n\n  const BooksSearch = term => {\n    if (term.length !== 0) {\n      BooksAPI.search().then(book => {\n        if (!books.error) {\n          setBooks(book);\n        } else {\n          setBooks([]);\n        }\n      });\n    } else {\n      setBooks([]);\n    }\n  };\n\n  BooksSearch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: term,\n          placeholder: \"Search by title or author\",\n          onChange: e => props.updateQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(BooksFetch, {\n        BooksSearch: book,\n        fetchedBooks: fetchedBooks,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BooksSearch;\nexport default BooksSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BooksSearch\");","map":{"version":3,"sources":["/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/Components/BooksSearch.jsx"],"names":["Component","React","useState","useEffect","BooksAPI","Book","BooksSearch","shelf","book","onChange","fetchedBooks","bookShelf","filter","key","term","length","search","then","books","error","setBooks","e","props","updateQuery","target","value"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAKA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,CAAD,KAA6C;AAC/D,QAAMC,SAAS,GAAGH,IAAI,CAACI,MAAL,CAAaJ,IAAD,IAAUA,IAAI,CAACD,KAAL,KAAeA,KAAK,CAACM,GAA3C,CAAlB;;AAEA,QAAMP,WAAW,GAAIQ,IAAD,IAAU;AAC5B,QAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrBX,MAAAA,QAAQ,CAACY,MAAT,GAAkBC,IAAlB,CAAwBT,IAAD,IAAU;AAC/B,YAAI,CAACU,KAAK,CAACC,KAAX,EAAkB;AAChBC,UAAAA,QAAQ,CAACZ,IAAD,CAAR;AACD,SAFD,MAEO;AACLY,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,OAND;AAOD,KARD,MAQO;AACLA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,GAZD;;AAaAd,EAAAA,WAAW;AACT,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAG,QAAA,EAAE,EAAC,GAAN;AAAU,QAAA,SAAS,EAAC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,KAAK,EAAEQ,IAFP;AAGA,UAAA,WAAW,EAAC,2BAHZ;AAGwC,UAAA,QAAQ,EAAGO,CAAD,IAAMC,KAAK,CAACC,WAAN,CAAkBF,CAAC,CAACG,MAAF,CAASC,KAA3B;AAHxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAUA;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE,QAAC,UAAD;AACA,QAAA,WAAW,EAAEjB,IADb;AAEA,QAAA,YAAY,EAAEE,YAFd;AAGA,QAAA,QAAQ,EAAED;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAtCD;;KAAMH,W;AAwCN,eAAeA,WAAf","sourcesContent":["import { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport Book from \"./Book\"\n\n\n\n\nconst BooksSearch = ({ shelf, book, onChange, fetchedBooks }) => {\n  const bookShelf = book.filter((book) => book.shelf === shelf.key);\n\n  const BooksSearch = (term )=> {\n    if (term.length !== 0) {\n      BooksAPI.search().then((book) => {\n        if (!books.error) {\n          setBooks(book);\n        } else {\n          setBooks([]);\n        }\n      });\n    } else {\n      setBooks([]);\n    }\n  };\n  BooksSearch();\n    return (\n        <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <a to=\"/\" className=\"close-search\">Close</a>\n          <div className=\"search-books-input-wrapper\">\n            <input \n            type=\"text\" \n            value={term}\n            placeholder=\"Search by title or author\" onChange={(e) =>props.updateQuery(e.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <BooksFetch\n          BooksSearch={book}\n          fetchedBooks={fetchedBooks}\n          onChange={onChange}\n/>\n    \n            </div>\n            </div>\n);\n};\n            \nexport default BooksSearch;"]},"metadata":{},"sourceType":"module"}