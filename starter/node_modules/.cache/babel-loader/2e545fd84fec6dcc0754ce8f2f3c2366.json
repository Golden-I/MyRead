{"ast":null,"code":"var _jsxFileName = \"/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport Books from \"./Components/Book\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/BookShelf\";\nimport ShelfChange from \"./Components/ShelfChange\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchBooks from \"./Components/SearchBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchBooks] = useState([]);\n  const [books, setBooks] = useState([]); // const [mapBooksID, setMapIDBooks] = useState(BooksList());\n\n  useEffect(({\n    booksId\n  }) => {\n    BooksAPI.getAll().then(books => {\n      setBooks(books);\n    });\n  }, []); // useEffect(() => {\n  //   const merge = books.map((book) => {\n  //     if (mapBooksID.has(book.id)) {\n  //       return mapBooksID.get(book.id);\n  //     } else {\n  //       return Book;\n  //     }\n  //     return book;\n  //   });\n  //   setMergeBooks(merge);\n  // }),\n  //   [searchBooks];\n  // const onchange = (book, eventChange) => {\n  //   const updateBooks = books.map((book) => {\n  //     if (book.id === book.id) {\n  //       book.shelf = eventChange;\n  //       return book;\n  //     }\n  //     return book;\n  //   });\n  //   if (!mapBooksID.has(book.id)) {\n  //     book.shelf = placeIT;\n  //     updateBooks.push(book);\n  //   }\n  //   setBooks(updateBooks);\n  //   BooksAPI.update(book, eventChange);\n  // };\n\n  addToList = event => {\n    let shelf = event.target.value;\n    let bookId = event.target.getAttribute(\"BooksAPI-bookId\");\n    let bookList = this.state.books;\n    BooksAPI.get(bookId).then(book => {\n      book.shelf = shelf;\n      let counter = 0;\n      bookList.map(shelvedBook => {\n        if (book.id !== shelvedBook.id) {\n          counter++;\n        }\n\n        if (counter === bookList.length) {\n          this.setState(() => ({\n            books: this.state.books.push(book)\n          }));\n        }\n\n        return book;\n      });\n      this.setState(() => ({\n        books: bookList.map(book => {\n          if (book.id === book.id) {\n            book.shelf = shelf;\n          }\n\n          return book;\n        })\n      }));\n      BooksAPI.update(book, shelf);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showSearchPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n  {\n    /* <div className=\"app\">\n        <books />\n        <shelfshange />\n         <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <button className=\"close-search\">Close</button>\n            <a\n              className=\"close-search\"\n              onClick={() => setShowSearchpage(!showSearchPage)}\n            >\n              Close\n            </a>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n                value={query}\n                onChange={(Event) => setQuery(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {/* <className=\"books-grid\"> */\n  } //           {megeBooks.mpa((book) => (\n  //             <li key={book.id}>\n  //               <Book Book={book} onChange={onChange} />\n  //             </li>\n  //           ))}\n  //         </div>\n  //       </div>\n  //       <div className=\"list-books\">\n  //         {console.log(\"Search\", searcBooks)}\n  //         <BooksList />\n  //         <div className=\"list-books-content\">\n  //           <Shelves books={books} updateBookShelf={updateBookShelf} />\n  //           <div>\n  //             <div className=\"openSearch\">\n  //               <button>Add Book</button>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  // <div className=\"app\">\n  //   <Route */}\n  //     path=\"/search\"\n  //     render={() => (\n  //       <SearchBooks\n  //         books={this.state.results}\n  //         updateSearchBooks={(search) => this.updateSearchBooks(search)}\n  //         addBook={this.addToList}\n  //       />\n  //     )}\n  //   />\n  //     <Route\n  //       exact\n  //       path=\"/\"\n  //       render={() => (\n  //         <bookList\n  //           books={this.state.books}\n  //           onShelfChange={this.bookShelfChangeHandler}\n  //         />\n  //       )}\n  //     />\n  //   </div>\n  // );\n  //   //\n  //   <div>\n  //     <book />\n  //     <booksList />\n  //     <shelfChange />\n  //     <shelf />\n  //     //{\" \"}\n  //     <div className=\"open-search\">\n  //       // <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n  //       //{\" \"}\n  //     </div>\n  //     //{\" \"}\n  //   </div>;\n}\n\n_s(App, \"oBPsycizYx2UoCE+eY4eqQzQsO8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js"],"names":["useState","useEffect","React","Component","Books","BooksList","Shelf","ShelfChange","BooksAPI","SearchBooks","App","showSearchPage","setShowSearchBooks","books","setBooks","booksId","getAll","then","addToList","event","shelf","target","value","bookId","getAttribute","bookList","state","get","book","counter","map","shelvedBook","id","length","setState","push","update","setShowSearchpage"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport Books from \"./Components/Book\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/BookShelf\";\nimport ShelfChange from \"./Components/ShelfChange\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchBooks from \"./Components/SearchBooks\";\n\nfunction App() {\n  const [showSearchPage, setShowSearchBooks] = useState([]);\n  const [books, setBooks] = useState([]);\n  // const [mapBooksID, setMapIDBooks] = useState(BooksList());\n\n  useEffect(({ booksId }) => {\n    BooksAPI.getAll().then((books) => {\n      setBooks(books);\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   const merge = books.map((book) => {\n  //     if (mapBooksID.has(book.id)) {\n  //       return mapBooksID.get(book.id);\n  //     } else {\n  //       return Book;\n  //     }\n  //     return book;\n  //   });\n  //   setMergeBooks(merge);\n  // }),\n  //   [searchBooks];\n\n  // const onchange = (book, eventChange) => {\n  //   const updateBooks = books.map((book) => {\n  //     if (book.id === book.id) {\n  //       book.shelf = eventChange;\n  //       return book;\n  //     }\n  //     return book;\n  //   });\n  //   if (!mapBooksID.has(book.id)) {\n  //     book.shelf = placeIT;\n  //     updateBooks.push(book);\n  //   }\n  //   setBooks(updateBooks);\n  //   BooksAPI.update(book, eventChange);\n  // };\n  addToList = (event) => {\n    let shelf = event.target.value;\n    let bookId = event.target.getAttribute(\"BooksAPI-bookId\");\n    let bookList = this.state.books;\n    BooksAPI.get(bookId).then((book) => {\n      book.shelf = shelf;\n      let counter = 0;\n      bookList.map((shelvedBook) => {\n        if (book.id !== shelvedBook.id) {\n          counter++;\n        }\n        if (counter === bookList.length) {\n          this.setState(() => ({\n            books: this.state.books.push(book),\n          }));\n        }\n        return book;\n      });\n      this.setState(() => ({\n        books: bookList.map((book) => {\n          if (book.id === book.id) {\n            book.shelf = shelf;\n          }\n          return book;\n        }),\n      }));\n      BooksAPI.update(book, shelf);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      {showSearchPage ? (\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <a\n              className=\"close-search\"\n              onClick={() => setShowSearchpage(!showSearchPage)}\n            >\n              Close\n            </a>\n\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\"></ol>\n          </div>\n        </div>\n      ) : (\n        <div> </div>\n      )}\n    </div>\n  );\n\n  {\n    /* <div className=\"app\">\n        <books />\n        <shelfshange />\n\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <button className=\"close-search\">Close</button>\n            <a\n              className=\"close-search\"\n              onClick={() => setShowSearchpage(!showSearchPage)}\n            >\n              Close\n            </a>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n                value={query}\n                onChange={(Event) => setQuery(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {/* <className=\"books-grid\"> */\n  }\n  //           {megeBooks.mpa((book) => (\n  //             <li key={book.id}>\n  //               <Book Book={book} onChange={onChange} />\n  //             </li>\n  //           ))}\n  //         </div>\n  //       </div>\n  //       <div className=\"list-books\">\n  //         {console.log(\"Search\", searcBooks)}\n  //         <BooksList />\n\n  //         <div className=\"list-books-content\">\n  //           <Shelves books={books} updateBookShelf={updateBookShelf} />\n  //           <div>\n  //             <div className=\"openSearch\">\n  //               <button>Add Book</button>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n  // <div className=\"app\">\n  //   <Route */}\n  //     path=\"/search\"\n  //     render={() => (\n  //       <SearchBooks\n  //         books={this.state.results}\n  //         updateSearchBooks={(search) => this.updateSearchBooks(search)}\n  //         addBook={this.addToList}\n  //       />\n  //     )}\n  //   />\n\n  //     <Route\n  //       exact\n  //       path=\"/\"\n  //       render={() => (\n  //         <bookList\n  //           books={this.state.books}\n  //           onShelfChange={this.bookShelfChangeHandler}\n  //         />\n  //       )}\n  //     />\n  //   </div>\n  // );\n\n  //   //\n  //   <div>\n  //     <book />\n  //     <booksList />\n  //     <shelfChange />\n  //     <shelf />\n  //     //{\" \"}\n  //     <div className=\"open-search\">\n  //       // <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n  //       //{\" \"}\n  //     </div>\n  //     //{\" \"}\n  //   </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}