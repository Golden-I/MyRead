{"ast":null,"code":"var _jsxFileName = \"/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport Books from \"./Components/Book\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/BookShelf\";\nimport ShelfChange from \"./Components/ShelfChange\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Searcbooks from \"./Components/SearchBooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [showSearchPage, setShowSearchpage] = useState([]]);\n  const [books, setBooks] = useState([]); // const [mapBooksID, setMapIDBooks] = useState(BooksList());\n\n  useEffect(({\n    booksid\n  }) => {\n    BooksAPI.getAll().then(books => {\n      this.setState({\n        books\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const merge = searchBooks.map(Books => {\n      if (mapBooksID.has(book.id)) {\n        return mapBooksID.get(book.id);\n      } else {\n        return Book;\n      }\n\n      return book;\n    });\n    setMegeBooks(merge);\n  }), [searchBooks];\n\n  const onchange = (book, eventChange) => {\n    const updateBooks = books.map(book => {\n      if (book.id === book.id) {\n        book.shelf = eventChange;\n        return book;\n      }\n\n      return book;\n    });\n\n    if (!mapBooksID.has(book.id)) {\n      book.shelf = placeIT;\n      updateBooks.push(book);\n    }\n\n    setBooks(updateBooks);\n    BooksAPI.update(book, eventChange);\n  };\n\n  addToList = event => {\n    let shelf = event.target.value;\n    let bookid = event.target.getAttribute(\"BooksAPI-bookid\");\n    let bookList = this.state.books;\n    BooksAPI.get(bookid).then(book => {\n      book.shelf = shelf;\n      let counter = 0;\n      bookList.map(shelvedBook => {\n        if (book.id !== shelvedBook.id) {\n          counter++;\n        }\n\n        if (counter === bookList.length) {\n          this.setState(() => ({\n            books: this.state.books.push(book)\n          }));\n        }\n\n        return book;\n      });\n      this.setState(() => ({\n        books: bookList.map(book => {\n          if (book.id === book.id) {\n            book.shelf = shelf;\n          }\n\n          return book;\n        })\n      }));\n      BooksAPI.update(book, shelf);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      render: () => /*#__PURE__*/_jsxDEV(Searchbooks, {\n        books: this.state.results,\n        updateSearchBooks: search => this.updateSearchBoooks(search),\n        addBook: this.addToList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(\"booklist\", {\n        books: this.state.books,\n        onShelfChange: this.bookShelfChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this); //   return (\n  //     <div className=\"app\">\n  //       {showSearchPage ? (\n  //         <div className=\"search-books\">\n  //           <div className=\"search-books-bar\">\n  //             <a\n  //               className=\"close-search\"\n  //               onClick={() => setShowSearchpage(!showSearchPage)}\n  //             >\n  //               Close\n  //             </a>\n  //             <div className=\"search-books-input-wrapper\">\n  //               <input\n  //                 type=\"text\"\n  //                 placeholder=\"Search by title, author, or ISBN\"\n  //               />\n  //             </div>\n  //           </div>\n  //           <div className=\"search-books-results\">\n  //             <ol className=\"books-grid\"></ol>\n  //           </div>\n  //         </div>\n  //       ) : (\n  //         <div>\n  //           <book />\n  //           <booksList />\n  //           <shelfChange />\n  //           <shelf />\n  //           <div className=\"open-search\">\n  //             <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //   );\n  // }\n  //     <div className=\"app\">\n  //       <books />\n  //       <shelfshange />\n  //       <div className=\"search-books\">\n  //         <div className=\"search-books-bar\">\n  //           <button className=\"close-searc\">Close</button>\n  //           <a\n  //             className=\"close-search\"\n  //             onClick={() => setShowSearchpage(!showSearchPage)}\n  //           >\n  //             Close\n  //           </a>\n  //           <div className=\"search-books-input-wrapper\">\n  //             <input\n  //               type=\"text\"\n  //               placeholder=\"Search by title, author, or ISBN\"\n  //               value={query}\n  //               onChange={(Event) => setQuery(e.target.value)}\n  //             />\n  //           </div>\n  //         </div>\n  //         <div className=\"search-books-results\">\n  //           {/* <className=\"books-grid\"> */}\n  //           {megeBooks.mpa((book) => (\n  //             <li key={book.id}>\n  //               <Book Book={book} onChange={onChange} />\n  //             </li>\n  //           ))}\n  //         </div>\n  //       </div>\n  //       <div className=\"list-books\">\n  //         {console.log(\"Search\", searcBooks)}\n  //         <BooksList />\n  //         <div className=\"list-books-content\">\n  //           <Shelves books={books} updateBookShelf={updateBookShelf} />\n  //           <div>\n  //             <div className=\"openSearch\">\n  //               <button>Add Book</button>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n}\n\n_s(App, \"rqKIBM6avHOQ/zrBivWHaFL0GmA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js"],"names":["useState","useEffect","React","Component","Books","BooksList","Shelf","ShelfChange","BooksAPI","Searcbooks","App","books","setBooks","booksid","getAll","then","setState","merge","searchBooks","map","mapBooksID","has","book","id","get","Book","setMegeBooks","onchange","eventChange","updateBooks","shelf","placeIT","push","update","addToList","event","target","value","bookid","getAttribute","bookList","state","counter","shelvedBook","length","results","search","updateSearchBoooks","bookShelfChangeHandler"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from \"react\";\nimport Books from \"./Components/Book\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/BookShelf\";\nimport ShelfChange from \"./Components/ShelfChange\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Searcbooks from \"./Components/SearchBooks\";\n\nfunction App() {\n  // const [showSearchPage, setShowSearchpage] = useState([]]);\n  const [books, setBooks] = useState([]);\n  // const [mapBooksID, setMapIDBooks] = useState(BooksList());\n\n  useEffect(({ booksid }) => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books });\n    });\n  }, []);\n\n  useEffect(() => {\n    const merge = searchBooks.map((Books) => {\n      if (mapBooksID.has(book.id)) {\n        return mapBooksID.get(book.id);\n      } else {\n        return Book;\n      }\n      return book;\n    });\n    setMegeBooks(merge);\n  }),\n    [searchBooks];\n\n  const onchange = (book, eventChange) => {\n    const updateBooks = books.map((book) => {\n      if (book.id === book.id) {\n        book.shelf = eventChange;\n        return book;\n      }\n      return book;\n    });\n    if (!mapBooksID.has(book.id)) {\n      book.shelf = placeIT;\n      updateBooks.push(book);\n    }\n    setBooks(updateBooks);\n    BooksAPI.update(book, eventChange);\n  };\n  addToList = (event) => {\n    let shelf = event.target.value;\n    let bookid = event.target.getAttribute(\"BooksAPI-bookid\");\n    let bookList = this.state.books;\n    BooksAPI.get(bookid).then((book) => {\n      book.shelf = shelf;\n      let counter = 0;\n      bookList.map((shelvedBook) => {\n        if (book.id !== shelvedBook.id) {\n          counter++;\n        }\n        if (counter === bookList.length) {\n          this.setState(() => ({\n            books: this.state.books.push(book),\n          }));\n        }\n        return book;\n      });\n      this.setState(() => ({\n        books: bookList.map((book) => {\n          if (book.id === book.id) {\n            book.shelf = shelf;\n          }\n          return book;\n        }),\n      }));\n      BooksAPI.update(book, shelf);\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <Route\n        path=\"/search\"\n        render={() => (\n          <Searchbooks\n            books={this.state.results}\n            updateSearchBooks={(search) => this.updateSearchBoooks(search)}\n            addBook={this.addToList}\n          />\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <booklist\n            books={this.state.books}\n            onShelfChange={this.bookShelfChangeHandler}\n          />\n        )}\n      />\n    </div>\n  );\n\n  //   return (\n  //     <div className=\"app\">\n  //       {showSearchPage ? (\n  //         <div className=\"search-books\">\n  //           <div className=\"search-books-bar\">\n  //             <a\n  //               className=\"close-search\"\n  //               onClick={() => setShowSearchpage(!showSearchPage)}\n  //             >\n  //               Close\n  //             </a>\n  //             <div className=\"search-books-input-wrapper\">\n  //               <input\n  //                 type=\"text\"\n  //                 placeholder=\"Search by title, author, or ISBN\"\n  //               />\n  //             </div>\n  //           </div>\n  //           <div className=\"search-books-results\">\n  //             <ol className=\"books-grid\"></ol>\n  //           </div>\n  //         </div>\n  //       ) : (\n  //         <div>\n  //           <book />\n  //           <booksList />\n  //           <shelfChange />\n  //           <shelf />\n\n  //           <div className=\"open-search\">\n  //             <a onClick={() => setShowSearchpage(!showSearchPage)}>Add a book</a>\n  //           </div>\n  //         </div>\n  //       )}\n  //     </div>\n  //   );\n  // }\n  //     <div className=\"app\">\n  //       <books />\n  //       <shelfshange />\n\n  //       <div className=\"search-books\">\n  //         <div className=\"search-books-bar\">\n  //           <button className=\"close-searc\">Close</button>\n  //           <a\n  //             className=\"close-search\"\n  //             onClick={() => setShowSearchpage(!showSearchPage)}\n  //           >\n  //             Close\n  //           </a>\n  //           <div className=\"search-books-input-wrapper\">\n  //             <input\n  //               type=\"text\"\n  //               placeholder=\"Search by title, author, or ISBN\"\n  //               value={query}\n  //               onChange={(Event) => setQuery(e.target.value)}\n  //             />\n  //           </div>\n  //         </div>\n  //         <div className=\"search-books-results\">\n  //           {/* <className=\"books-grid\"> */}\n  //           {megeBooks.mpa((book) => (\n  //             <li key={book.id}>\n  //               <Book Book={book} onChange={onChange} />\n  //             </li>\n  //           ))}\n  //         </div>\n  //       </div>\n  //       <div className=\"list-books\">\n  //         {console.log(\"Search\", searcBooks)}\n  //         <BooksList />\n\n  //         <div className=\"list-books-content\">\n  //           <Shelves books={books} updateBookShelf={updateBookShelf} />\n  //           <div>\n  //             <div className=\"openSearch\">\n  //               <button>Add Book</button>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}