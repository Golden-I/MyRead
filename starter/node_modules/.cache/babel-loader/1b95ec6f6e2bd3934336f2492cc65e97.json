{"ast":null,"code":"var _jsxFileName = \"/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from 'react';\nimport Books from \"./Components/Books\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/Shelf\";\nimport ShelfChange from \"./Components/Shelfchange\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [mapBooksID, setMapIDBooks] = useState(new Map());\n  useEffect(() => {\n    BooksAPI.getAll().then(data => {\n      setBooks(data);\n      map.BooksID(createBooksMap(data));\n    });\n  }, []);\n  useEffect(() => {\n    const merge = searchBooks.map(Book => {\n      if (mapBooksID.has(book.id)) {\n        return mapBooksID.get(book.id);\n      } else {\n        return Book;\n      }\n    });\n    setMegeBooks(merge);\n  }), [searchBooks];\n\n  const onchange = (book, placeIt) => {\n    const updateBooks = books.map(book => {\n      if (book.id === book.id) {\n        book.shelf = placeIt;\n        return book;\n      }\n\n      return book;\n    });\n\n    if (!mapBooksID.has(book.id)) {\n      book.shelf = placeIT;\n      updateBooks.push(book);\n    }\n\n    setBooks(updateBooks);\n    BooksAPI.update(book, placeIt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-searc\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"close-search\",\n          onClick: () => setShowSearchpage(!showSearchPage),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title, author, or ISBN\",\n            value: query,\n            onChange: Event => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: megeBooks.mpa(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Book, {\n            Book: book,\n            BookShelfChange: updatBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [console.log(\"Search\", searcBooks), /*#__PURE__*/_jsxDEV(BooksList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: [/*#__PURE__*/_jsxDEV(Shelves, {\n          books: books,\n          updateBookShelf: updateBookShelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"openSearch\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0oS5pNlLUJhhSta4ZiH2JwRa594=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ManalHazboun/Desktop/nd0191-c1-myreads-main/starter/src/App.js"],"names":["useState","useEffect","React","Component","Books","BooksList","Shelf","ShelfChange","BooksAPI","App","showSearchPage","setShowSearchpage","books","setBooks","mapBooksID","setMapIDBooks","Map","getAll","then","data","map","BooksID","createBooksMap","merge","searchBooks","Book","has","book","id","get","setMegeBooks","onchange","placeIt","updateBooks","shelf","placeIT","push","update","query","Event","setQuery","e","target","value","megeBooks","mpa","updatBookShelf","console","log","searcBooks","updateBookShelf"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;;;AAGA,SAASC,GAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAE,EAAF,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,IAAIgB,GAAJ,EAAD,CAA5C;AAEAf,EAAAA,SAAS,CAAE,MAAK;AACdO,IAAAA,QAAQ,CAACS,MAAT,GACCC,IADD,CACMC,IAAI,IAAI;AACZN,MAAAA,QAAQ,CAAEM,IAAF,CAAR;AACAC,MAAAA,GAAG,CAACC,OAAJ,CAAaC,cAAc,CAACH,IAAD,CAA3B;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQAlB,EAAAA,SAAS,CAAE,MAAK;AACd,UAAMsB,KAAK,GAAGC,WAAW,CAACJ,GAAZ,CAAgBK,IAAI,IAAG;AACnC,UAAIX,UAAU,CAACY,GAAX,CAAeC,IAAI,CAACC,EAApB,CAAJ,EAA4B;AAC1B,eAAOd,UAAU,CAACe,GAAX,CAAeF,IAAI,CAACC,EAApB,CAAP;AACD,OAFD,MAEO;AAAE,eAAOH,IAAP;AAAa;AACvB,KAJa,CAAd;AAKAK,IAAAA,YAAY,CAAEP,KAAF,CAAZ;AACD,GAPQ,CAAT,EAOI,CAACC,WAAD,CAPJ;;AASA,QAAMO,QAAQ,GAAG,CAACJ,IAAD,EAAOK,OAAP,KAAmB;AACtC,UAAMC,WAAW,GAAGrB,KAAK,CAACQ,GAAN,CAAUO,IAAI,IAAI;AACpC,UAAGA,IAAI,CAACC,EAAL,KAAYD,IAAI,CAACC,EAApB,EAAwB;AACtBD,QAAAA,IAAI,CAACO,KAAL,GAAaF,OAAb;AACA,eAAOL,IAAP;AACD;;AACD,aAAOA,IAAP;AACD,KANmB,CAApB;;AAOA,QAAI,CAACb,UAAU,CAACY,GAAX,CAAeC,IAAI,CAACC,EAApB,CAAL,EAA8B;AAC5BD,MAAAA,IAAI,CAACO,KAAL,GAAYC,OAAZ;AACAF,MAAAA,WAAW,CAACG,IAAZ,CAAiBT,IAAjB;AACD;;AACDd,IAAAA,QAAQ,CAACoB,WAAD,CAAR;AACAzB,IAAAA,QAAQ,CAAC6B,MAAT,CAAgBV,IAAhB,EAAsBK,OAAtB;AACG,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACA;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEK;AACK,UAAA,SAAS,EAAC,cADf;AAEK,UAAA,OAAO,EAAE,MAAMrB,iBAAiB,CAAC,CAACD,cAAF,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFL,eAQQ;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kCAFd;AAGd,YAAA,KAAK,EAAE4B,KAHO;AAGA,YAAA,QAAQ,EAAGC,KAAD,IAAUC,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARR;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAiBM;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAEGC,SAAS,CAACC,GAAV,CAAclB,IAAI,iBACjB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,IAAZ;AAAkB,YAAA,eAAe,EAAEmB;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF,WAASnB,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AAFH;AAAA;AAAA;AAAA;AAAA,cAjBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eA2BI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,iBACCmB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,UAAtB,CADD,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACA,QAAC,OAAD;AAAS,UAAA,KAAK,EAAErC,KAAhB;AAAuB,UAAA,eAAe,EAAEsC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEE;AAAA,iCACA;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0Ca;;GAhFNzC,G;;KAAAA,G;AAkFT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport React, { Component } from 'react';\nimport Books from \"./Components/Books\";\nimport BooksList from \"./Components/BooksList\";\nimport Shelf from \"./Components/Shelf\";\nimport ShelfChange from \"./Components/Shelfchange\";\nimport * as BooksAPI from \"./BooksAPI\";\n\n\nfunction App()  {\n  const [showSearchPage, setShowSearchpage] = useState(false);\n  const [books, setBooks] = useState ([])\n  const [mapBooksID, setMapIDBooks] = useState(new Map());\n\n  useEffect (() =>{\n    BooksAPI.getAll()\n    .then(data => {\n      setBooks (data)\n      map.BooksID (createBooksMap(data))\n    });\n  }, [])\n\n  useEffect (() =>{\n    const merge = searchBooks.map(Book =>{\n      if (mapBooksID.has(book.id)){\n        return mapBooksID.get(book.id)\n      } else { return Book;}\n    })\n    setMegeBooks (merge);\n  }), [searchBooks]\n\n  const onchange = (book, placeIt) => {\nconst updateBooks = books.map(book => {\n  if(book.id === book.id) {\n    book.shelf = placeIt;\n    return book;\n  }\n  return book;\n})\nif (!mapBooksID.has(book.id)) {\n  book.shelf= placeIT;\n  updateBooks.push(book)\n}\nsetBooks(updateBooks);\nBooksAPI.update(book, placeIt);\n  }\n\n  return (\n    <div className=\"app\">\n    <div className=\"search-books\">\n    <div className=\"search-books-bar\">\n    <button className=\"close-searc\">Close</button>\n         <a\n              className=\"close-search\"\n              onClick={() => setShowSearchpage(!showSearchPage)}\n            >\n              Close\n            </a>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\nvalue={query} onChange={(Event)=> setQuery(e.target.value)}\n                />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {/* <className=\"books-grid\"> */}\n            {megeBooks.mpa(book =>(\n              <li key={book.id}>\n                <Book Book={book} BookShelfChange={updatBookShelf} />\n              </li>\n            ))}\n          </div>\n        </div>\n        <div className=\"list-books\">\n        {console.log(\"Search\", searcBooks)}\n          <BooksList />\n\n          <div className=\"list-books-content\">\n          <Shelves books={books} updateBookShelf={updateBookShelf}/>\n            <div>\n            <div className=\"openSearch\">\n           \n            <button>Add Book</button>\n            </div></div>\n            </div>\n            </div>\n            </div>\n             )}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}